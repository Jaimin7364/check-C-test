{
  "title": "üöÄ C Project Test Automation Report",
  "generated": "2025-09-24 18:13:13",
  "model_name": "llama-3.3-70b-versatile",
  "execution_time_seconds": 4.610407,
  "status": "FAILED",
  "changed_files": [
    "main.c"
  ],
  "compilation_status": {
    "main.c": true
  },
  "analyzed_functions": [
    {
      "name": "add",
      "file_path": "main.c",
      "line_start": 1,
      "line_end": 5,
      "return_type": "int",
      "parameters": [
        {
          "type": "int",
          "name": "a"
        },
        {
          "type": "int",
          "name": "b"
        },
        {
          "type": "int",
          "name": "c"
        }
      ],
      "is_static": false,
      "is_extern": false,
      "complexity_score": 1,
      "code_snippet": "#include <stdio.h>\n\nint add(int a, int b, int c) {\n    return a + b + c;\n}"
    },
    {
      "name": "mul2",
      "file_path": "main.c",
      "line_start": 5,
      "line_end": 9,
      "return_type": "int",
      "parameters": [
        {
          "type": "int",
          "name": "a"
        },
        {
          "type": "int",
          "name": "b"
        }
      ],
      "is_static": false,
      "is_extern": false,
      "complexity_score": 1,
      "code_snippet": "}\n\nint mul2(int a, int b) {\n    return a * b;\n}"
    },
    {
      "name": "main",
      "file_path": "main.c",
      "line_start": 9,
      "line_end": 23,
      "return_type": "int",
      "parameters": [],
      "is_static": false,
      "is_extern": false,
      "complexity_score": 1,
      "code_snippet": "}\n\nint main() {\n    int num1, num2, num3, result;\n    \n    printf(\"Enter three numbers: \");\n    scanf(\"%d %d %d\", &num1, &num2, &num3);\n    \n    result = add(num1, num2, num3);\n    \n    printf(\"Sum: %..."
    }
  ],
  "test_results": {
    "status": "failure",
    "output": "[==========] tests: Running 5 test(s).\n[ RUN      ] test_mul2_positive\n[       OK ] test_mul2_positive\n[ RUN      ] test_mul2_negative\n[       OK ] test_mul2_negative\n[ RUN      ] test_mul2_zero\n[       OK ] test_mul2_zero\n[ RUN      ] test_mul2_large\n[  FAILED  ] test_mul2_large\n[ RUN      ] test_mul2_overflow\n[  FAILED  ] test_mul2_overflow\n[==========] tests: 5 test(s) run.\n\n[  ERROR   ] --- 0xfffffffffffffffe != 0xffffffff80000002\n[   LINE   ] --- /home/runner/work/check-C-test/check-C-test/tests_pr/chunk_0_tests.c:40: error: Failure!\n[  ERROR   ] --- result < 0\n[   LINE   ] --- /home/runner/work/check-C-test/check-C-test/tests_pr/chunk_0_tests.c:47: error: Failure!\n[  PASSED  ] 3 test(s).\n[  FAILED  ] tests: 2 test(s), listed below:\n[  FAILED  ] test_mul2_large\n[  FAILED  ] test_mul2_overflow\n\n 2 FAILED TEST(S)\n\n\n[==========] tests: Running 4 test(s).\n[ RUN      ] test_main_valid_input\n[       OK ] test_main_valid_input\n[ RUN      ] test_main_edge_cases\n[  FAILED  ] test_main_edge_cases\n[ RUN      ] test_main_mul2_valid_input\n[       OK ] test_main_mul2_valid_input\n[ RUN      ] test_main_mul2_edge_cases\n[  FAILED  ] test_main_mul2_edge_cases\n[==========] tests: 4 test(s) run.\n\n[  ERROR   ] --- result > INT_MAX\n[   LINE   ] --- /home/runner/work/check-C-test/check-C-test/tests_pr/chunk_1_tests.c:37: error: Failure!\n[  ERROR   ] --- result > INT_MAX\n[   LINE   ] --- /home/runner/work/check-C-test/check-C-test/tests_pr/chunk_1_tests.c:57: error: Failure!\n[  PASSED  ] 2 test(s).\n[  FAILED  ] tests: 2 test(s), listed below:\n[  FAILED  ] test_main_edge_cases\n[  FAILED  ] test_main_mul2_edge_cases\n\n 2 FAILED TEST(S)\n",
    "chunks_processed": 2,
    "chunk_details": [
      {
        "id": "chunk_0",
        "type": "unit",
        "functions": 1
      },
      {
        "id": "chunk_1",
        "type": "unit",
        "functions": 1
      }
    ]
  },
  "test_cases": [
    {
      "name": "test_mul2_positive",
      "status": "PASS",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "",
      "test_method": "test_mul2_positive",
      "explanation": "Tests mul2 with positive values"
    },
    {
      "name": "test_mul2_negative",
      "status": "PASS",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "",
      "test_method": "test_mul2_negative",
      "explanation": "Tests mul2 with negative values"
    },
    {
      "name": "test_mul2_zero",
      "status": "PASS",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "",
      "test_method": "test_mul2_zero",
      "explanation": "Tests behavior with zero values"
    },
    {
      "name": "test_mul2_large",
      "status": "FAIL",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "Test assertion failed",
      "test_method": "test_mul2_large",
      "explanation": "Tests mul2 with maximum/large values"
    },
    {
      "name": "test_mul2_overflow",
      "status": "FAIL",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "Test assertion failed",
      "test_method": "test_mul2_overflow",
      "explanation": "Tests integer overflow behavior"
    },
    {
      "name": "tests",
      "status": "FAIL",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "Test assertion failed",
      "test_method": "tests",
      "explanation": ""
    },
    {
      "name": "test_mul2_large",
      "status": "FAIL",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "Test assertion failed",
      "test_method": "test_mul2_large",
      "explanation": "Tests mul2 with maximum/large values"
    },
    {
      "name": "test_mul2_overflow",
      "status": "FAIL",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "Test assertion failed",
      "test_method": "test_mul2_overflow",
      "explanation": "Tests integer overflow behavior"
    },
    {
      "name": "test_main_valid_input",
      "status": "PASS",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "",
      "test_method": "test_main_valid_input",
      "explanation": "Tests main functionality with specific input conditions"
    },
    {
      "name": "test_main_mul2_valid_input",
      "status": "PASS",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "",
      "test_method": "test_main_mul2_valid_input",
      "explanation": "Tests main functionality with specific input conditions"
    },
    {
      "name": "test_main_edge_cases",
      "status": "FAIL",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "Test assertion failed",
      "test_method": "test_main_edge_cases",
      "explanation": "Tests uncommon or edge case scenarios"
    },
    {
      "name": "test_main_mul2_edge_cases",
      "status": "FAIL",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "Test assertion failed",
      "test_method": "test_main_mul2_edge_cases",
      "explanation": "Tests uncommon or edge case scenarios"
    },
    {
      "name": "tests",
      "status": "FAIL",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "Test assertion failed",
      "test_method": "tests",
      "explanation": ""
    },
    {
      "name": "test_main_edge_cases",
      "status": "FAIL",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "Test assertion failed",
      "test_method": "test_main_edge_cases",
      "explanation": "Tests uncommon or edge case scenarios"
    },
    {
      "name": "test_main_mul2_edge_cases",
      "status": "FAIL",
      "execution_time": 0.0,
      "error_message": "",
      "failure_reason": "Test assertion failed",
      "test_method": "test_main_mul2_edge_cases",
      "explanation": "Tests uncommon or edge case scenarios"
    }
  ],
  "coverage_metrics": {
    "line_coverage": 92.0,
    "function_coverage": 100.0,
    "branch_coverage": 0.0,
    "files": {
      "main.c": {
        "file": "main.c",
        "total_lines": 0,
        "covered_lines": 0,
        "line_coverage": 0.0
      }
    },
    "summary": "No coverage data available",
    "html_report": "/home/runner/work/check-C-test/check-C-test/coverage/html/index.html",
    "total_lines": 25,
    "covered_lines": 23,
    "total_functions": 7,
    "covered_functions": 7
  },
  "execution_logs": [
    "[2025-09-24 18:13:09] [INFO] üöÄ Starting C Project Test Automation with Smart Chunking",
    "[2025-09-24 18:13:09] [INFO] üìã Detected 2 code changes in 1 files:",
    "[2025-09-24 18:13:09] [INFO]    main.c lines 7-8 (modified)",
    "[2025-09-24 18:13:09] [INFO]    main.c lines 20-21 (modified)",
    "[2025-09-24 18:13:09] [INFO] üîç Analyzing C file: main.c",
    "[2025-09-24 18:13:09] [INFO] ‚úÖ Found 3 functions in main.c",
    "[2025-09-24 18:13:09] [INFO] üß© Created 2 intelligent test chunks:",
    "[2025-09-24 18:13:09] [INFO]    chunk_0: unit testing, 1 functions, complexity: 1/10",
    "[2025-09-24 18:13:09] [INFO]    chunk_1: unit testing, 1 functions, complexity: 1/10",
    "[2025-09-24 18:13:09] [INFO] üß™ Processing chunk_0 (unit test)...",
    "[2025-09-24 18:13:09] [INFO] ü§ñ Generating C test code (attempt 1/3)...",
    "[2025-09-24 18:13:10] [SUCCESS] ‚úÖ Generated valid-looking C test code",
    "[2025-09-24 18:13:10] [SUCCESS] ‚úÖ Generated chunk test file: /home/runner/work/check-C-test/check-C-test/tests_pr/chunk_0_tests.c",
    "[2025-09-24 18:13:10] [INFO] üî® Compiling C tests from /home/runner/work/check-C-test/check-C-test/tests_pr/chunk_0_tests.c",
    "[2025-09-24 18:13:10] [INFO] üîß Compilation command: gcc -std=c99 -Wall -Wextra -g --coverage -fprofile-arcs -ftest-coverage /home/runner/work/check-C-test/check-C-test/tests_pr/chunk_0_tests.c -lcmocka -lgcov -o /home/runner/work/check-C-test/check-C-test/tests_pr/chunk_0_tests -I /home/runner/work/check-C-test/check-C-test",
    "[2025-09-24 18:13:10] [SUCCESS] ‚úÖ Compilation successful",
    "[2025-09-24 18:13:10] [INFO] üß™ Executing C tests: /home/runner/work/check-C-test/check-C-test/tests_pr/chunk_0_tests",
    "[2025-09-24 18:13:10] [INFO] üìä Generating code coverage reports...",
    "[2025-09-24 18:13:10] [INFO] üìä Found version-specific gcov: gcov-11",
    "[2025-09-24 18:13:10] [INFO] üìä Using gcov tool: gcov-11",
    "[2025-09-24 18:13:10] [INFO] üìä Generating coverage for main.c...",
    "[2025-09-24 18:13:10] [SUCCESS] ‚úÖ Coverage generated for main.c",
    "[2025-09-24 18:13:11] [SUCCESS] ‚úÖ HTML coverage report generated",
    "[2025-09-24 18:13:11] [ERROR] ‚ùå Some tests failed",
    "[2025-09-24 18:13:11] [ERROR] [==========] tests: Running 5 test(s).\n[ RUN      ] test_mul2_positive\n[       OK ] test_mul2_positive\n[ RUN      ] test_mul2_negative\n[       OK ] test_mul2_negative\n[ RUN      ] test_mul2_zero\n[       OK ] test_mul2_zero\n[ RUN      ] test_mul2_large\n[  FAILED  ] test_mul2_large\n[ RUN      ] test_mul2_overflow\n[  FAILED  ] test_mul2_overflow\n[==========] tests: 5 test(s) run.\n",
    "[2025-09-24 18:13:11] [ERROR] [  ERROR   ] --- 0xfffffffffffffffe != 0xffffffff80000002\n[   LINE   ] --- /home/runner/work/check-C-test/check-C-test/tests_pr/chunk_0_tests.c:40: error: Failure!\n[  ERROR   ] --- result < 0\n[   LINE   ] --- /home/runner/work/check-C-test/check-C-test/tests_pr/chunk_0_tests.c:47: error: Failure!\n[  PASSED  ] 3 test(s).\n[  FAILED  ] tests: 2 test(s), listed below:\n[  FAILED  ] test_mul2_large\n[  FAILED  ] test_mul2_overflow\n\n 2 FAILED TEST(S)\n",
    "[2025-09-24 18:13:11] [INFO] üß™ Processing chunk_1 (unit test)...",
    "[2025-09-24 18:13:11] [INFO] ü§ñ Generating C test code (attempt 1/3)...",
    "[2025-09-24 18:13:12] [SUCCESS] ‚úÖ Generated valid-looking C test code",
    "[2025-09-24 18:13:12] [SUCCESS] ‚úÖ Generated chunk test file: /home/runner/work/check-C-test/check-C-test/tests_pr/chunk_1_tests.c",
    "[2025-09-24 18:13:12] [INFO] üî® Compiling C tests from /home/runner/work/check-C-test/check-C-test/tests_pr/chunk_1_tests.c",
    "[2025-09-24 18:13:12] [INFO] üîß Compilation command: gcc -std=c99 -Wall -Wextra -g --coverage -fprofile-arcs -ftest-coverage /home/runner/work/check-C-test/check-C-test/tests_pr/chunk_1_tests.c -lcmocka -lgcov -o /home/runner/work/check-C-test/check-C-test/tests_pr/chunk_1_tests -I /home/runner/work/check-C-test/check-C-test",
    "[2025-09-24 18:13:12] [SUCCESS] ‚úÖ Compilation successful",
    "[2025-09-24 18:13:12] [INFO] üß™ Executing C tests: /home/runner/work/check-C-test/check-C-test/tests_pr/chunk_1_tests",
    "[2025-09-24 18:13:12] [INFO] üìä Generating code coverage reports...",
    "[2025-09-24 18:13:12] [INFO] üìä Found version-specific gcov: gcov-11",
    "[2025-09-24 18:13:12] [INFO] üìä Using gcov tool: gcov-11",
    "[2025-09-24 18:13:12] [INFO] üìä Generating coverage for main.c...",
    "[2025-09-24 18:13:12] [SUCCESS] ‚úÖ Coverage generated for main.c",
    "[2025-09-24 18:13:13] [SUCCESS] ‚úÖ HTML coverage report generated",
    "[2025-09-24 18:13:13] [ERROR] ‚ùå Some tests failed",
    "[2025-09-24 18:13:13] [ERROR] [==========] tests: Running 4 test(s).\n[ RUN      ] test_main_valid_input\n[       OK ] test_main_valid_input\n[ RUN      ] test_main_edge_cases\n[  FAILED  ] test_main_edge_cases\n[ RUN      ] test_main_mul2_valid_input\n[       OK ] test_main_mul2_valid_input\n[ RUN      ] test_main_mul2_edge_cases\n[  FAILED  ] test_main_mul2_edge_cases\n[==========] tests: 4 test(s) run.\n",
    "[2025-09-24 18:13:13] [ERROR] [  ERROR   ] --- result > INT_MAX\n[   LINE   ] --- /home/runner/work/check-C-test/check-C-test/tests_pr/chunk_1_tests.c:37: error: Failure!\n[  ERROR   ] --- result > INT_MAX\n[   LINE   ] --- /home/runner/work/check-C-test/check-C-test/tests_pr/chunk_1_tests.c:57: error: Failure!\n[  PASSED  ] 2 test(s).\n[  FAILED  ] tests: 2 test(s), listed below:\n[  FAILED  ] test_main_edge_cases\n[  FAILED  ] test_main_mul2_edge_cases\n\n 2 FAILED TEST(S)\n",
    "[2025-09-24 18:13:13] [INFO] üìä C Function Analysis Summary:",
    "[2025-09-24 18:13:13] [INFO]    Total Functions: 3",
    "[2025-09-24 18:13:13] [INFO]    Static Functions: 0",
    "[2025-09-24 18:13:13] [INFO]    Average Complexity: 1.0/10",
    "[2025-09-24 18:13:13] [INFO] üìä Generating consolidated coverage reports...",
    "[2025-09-24 18:13:13] [INFO] üìä Found version-specific gcov: gcov-11",
    "[2025-09-24 18:13:13] [INFO] üìä Using gcov tool: gcov-11",
    "[2025-09-24 18:13:13] [INFO] üìä Generating coverage for main.c...",
    "[2025-09-24 18:13:13] [SUCCESS] ‚úÖ Coverage generated for main.c",
    "[2025-09-24 18:13:13] [SUCCESS] ‚úÖ HTML coverage report generated"
  ]
}